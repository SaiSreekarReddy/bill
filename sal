@echo off
setlocal enabledelayedexpansion

:: Retrieve username and password from master batch file
set USERNAME=%1
set PASSWORD=%2

:: Define the status cycle in an ordered array
set status_cycle[0]=open
set status_cycle[1]=todo
set status_cycle[2]=refining
set status_cycle[3]=waiting for dependencies
set status_cycle[4]=ready to start
set status_cycle[5]=in progress
set status_cycle[6]=done

:ISSUE_LOOP
:: Reset variables
set ISSUE_KEY=
set current_status=
set desired_status=
set current_index=
set desired_index=
set transition_id=

:: Prompt the user for the issue key
set /p ISSUE_KEY="Enter the Jira issue key (e.g., ABC-123) or type 'exit' to quit: "

:: Check if the user wants to exit
if /i "%ISSUE_KEY%"=="exit" (
    echo Exiting the script.
    goto END
)

:: Display status options
echo Select the desired status:
for /L %%i in (0,1,6) do (
    echo [%%i] !status_cycle[%%i]!
)

:: Prompt the user to select a status
set /p status_choice="Enter the number corresponding to the desired status: "

:: Check if the user provided a valid option
if "%status_cycle[%status_choice%]%"=="" (
    echo Invalid selection. Please try again.
    goto ISSUE_LOOP
)

set desired_status=%status_cycle[%status_choice%]%
echo You selected: !desired_status!

:: Get the current status of the Jira issue
curl -s -u %USERNAME%:%PASSWORD% -X GET -H "Content-Type: application/json" %JIRA_URL%/rest/api/2/issue/%ISSUE_KEY%?fields=status > current_status.json

:: Extract the last status name from JSON
for /f "tokens=2 delims=:" %%a in ('findstr /i "\"name\"" current_status.json') do (
    set "current_status=%%a"
)

:: Clean up the extracted value by removing unwanted characters
set current_status=%current_status:,=%
set current_status=%current_status:"=%
set current_status=%current_status: }=%
set current_status=%current_status:]=%

echo Current status is: !current_status!

:: Determine the current and desired indices in the status cycle
for /L %%i in (0,1,6) do (
    if /i "!status_cycle[%%i]!"=="!current_status!" set current_index=%%i
    if /i "!status_cycle[%%i]!"=="!desired_status!" set desired_index=%%i
)

:: If the current status is the desired status, we're done
if "%current_index%"=="%desired_index%" (
    echo The issue is already in the desired status.
    goto NEXT_ISSUE
)

:: Determine the transition path
if "%current_index%" NEQ "" if "%desired_index%" NEQ "" if %desired_index% GTR %current_index% (
    echo Moving forward through the cycle...
    set /A "steps=%desired_index%-%current_index%"
) else (
    echo Transitioning directly to the desired state...
    set steps=1
)

:: Apply the necessary transitions
for /L %%i in (1,1,%steps%) do (
    :: Get available transitions for the current status
    set TRANSITION_URL=%JIRA_URL%/rest/api/2/issue/%ISSUE_KEY%/transitions
    curl -s -u %USERNAME%:%PASSWORD% -X GET -H "Content-Type: application/json" %TRANSITION_URL% > transitions.json

    :: Find the appropriate transition ID for the next status
    set next_status=!status_cycle[%current_index%+%%i]!
    set transition_id=
    for /f "tokens=*" %%c in ('findstr /i /c:"!next_status!" transitions.json') do (
        for /f "tokens=3 delims=:," %%d in ("%%c") do (
            set transition_id=%%d
            set transition_id=!transition_id:"=!
        )
    )

    :: If a transition is found, apply it
    if defined transition_id (
        echo Transitioning to: !next_status! with ID: !transition_id!
        curl -s -u %USERNAME%:%PASSWORD% -X POST --data "{\"transition\": {\"id\": \"!transition_id!\"}}" -H "Content-Type: application/json" %TRANSITION_URL%
    ) else (
        echo Transition to !next_status! not available.
        goto NEXT_ISSUE
    )
)

:NEXT_ISSUE
echo Transition process completed for issue %ISSUE_KEY%.
echo.
goto ISSUE_LOOP

:END
echo Script has ended.

endlocal
