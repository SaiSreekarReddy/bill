<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Index - Enter Source IP</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            color: #333;
        }
        .container {
            background-color: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            max-width: 400px;
            width: 100%;
            box-sizing: border-box;
        }
        h2 {
            margin-top: 0;
            font-weight: 500;
            text-align: center;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        button {
            width: 100%;
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #218838;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Enter Source IP</h2>
        <form onsubmit="saveSourceIP()">
            <div class="form-group">
                <label for="sourceIP">Source IP Address:</label>
                <input type="text" id="sourceIP" name="sourceIP" placeholder="Enter IP address" required>
            </div>
            <button type="submit">Proceed</button>
        </form>
    </div>

    <script>
        function saveSourceIP() {
            const sourceIP = document.getElementById('sourceIP').value;
            sessionStorage.setItem('sourceIP', sourceIP);
            // Navigate to the transfer page after saving the IP
            window.location.href = 'transfer.html';
        }
    </script>
</body>
</html>


--

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Transfer - File Transfer Tool</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
            display: flex;
            height: 100vh;
            color: #333;
        }
        .sidebar {
            width: 240px;
            background-color: #28a745;
            color: white;
            padding: 20px;
            box-sizing: border-box;
            position: fixed;
            height: 100%;
        }
        .sidebar h3 {
            margin-top: 0;
            font-weight: 500;
        }
        .sidebar ul {
            list-style-type: none;
            padding: 0;
        }
        .sidebar ul li {
            padding: 12px 0;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .sidebar ul li:hover {
            background-color: #218838;
        }
        .content {
            margin-left: 260px;
            padding: 40px;
            background-color: white;
            width: calc(100% - 260px);
            box-sizing: border-box;
        }
        .header {
            width: 100%;
            height: 60px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 2px solid #ccc;
            margin-bottom: 20px;
        }
        .header h2 {
            margin: 0;
            font-weight: 500;
        }
        .header button {
            background-color: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 14px;
            transition: background-color 0.3s;
        }
        .header button:hover {
            background-color: #0056b3;
        }
        .content-body {
            height: calc(100vh - 160px);
            overflow-y: auto;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }
        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }
        .file-list {
            border: 1px solid #ccc;
            padding: 10px;
            margin-top: 10px;
            max-height: 300px;
            overflow-y: auto;
            border-radius: 5px;
        }
        .file-list div {
            margin-bottom: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .file-list div span {
            flex-grow: 1;
        }
        .file-list div button {
            background-color: #dc3545;
            color: white;
            border: none;
            padding: 5px 10px;
            cursor: pointer;
            border-radius: 3px;
            transition: background-color 0.3s;
        }
        .file-list div button:hover {
            background-color: #c82333;
        }
        button {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 5px;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #218838;
        }
        .hidden {
            display: none;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        table th, table td {
            border: 1px solid #ccc;
            padding: 12px;
            text-align: left;
        }
        table th {
            background-color: #f2f2f2;
        }
        /* Custom File Input */
        .file-input-wrapper {
            position: relative;
            display: inline-block;
            cursor: pointer;
        }
        .file-input-wrapper input[type="file"] {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }
        .custom-file-button {
            background-color: #28a745;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            transition: background-color 0.3s;
            display: inline-block;
            cursor: pointer;
        }
        .custom-file-button:hover {
            background-color: #218838;
        }
        .upload-files-btn {
            text-align: center;
            margin-top: 20px;
        }
        .upload-files-btn button {
            background-color: #28a745;
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 5px;
            font-size: 18px;
            transition: background-color 0.3s;
            cursor: pointer;
            display: block;
            width: 100%;
            max-width: 200px;
            margin: 0 auto;
        }
        .upload-files-btn button:hover {
            background-color: #218838;
        }
        @media (max-width: 768px) {
            .sidebar {
                width: 200px;
            }
            .content {
                margin-left: 220px;
                padding: 20px;
            }
            .header {
                flex-direction: column;
                align-items: flex-start;
            }
            .header h2 {
                margin-bottom: 10px;
            }
        }
        @media (max-width: 480px) {
            .sidebar {
                width: 180px;
            }
            .content {
                margin-left: 200px;
                padding: 15px;
            }
            .header button {
                width: 100%;
            }
        }
        /* Modal Styling */
        .modal {
            display: none; /* Hidden by default */
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            padding-top: 60px;
        }
        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            border-radius: 5px;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <h3>Menu</h3>
        <ul>
            <li onclick="showSection('transferSection')">Transfer</li>
            <li onclick="showSection('historySection')">History</li>
            <li onclick="showSection('uploadSection')">Upload Files</li>
        </ul>
    </div>

    <div class="content">
        <div class="header">
            <h2 id="pageTitle">Transfer Files</h2>
            <button onclick="refreshPage()">Refresh</button>
        </div>
        <div class="content-body">
            <!-- Transfer Section -->
            <div id="transferSection">
                <h3>File Transfer</h3>
                <div class="form-group">
                    <label for="sourcePath">Source Path:</label>
                    <input type="text" id="sourcePath" placeholder="Enter source path" required>
                </div>
                <div class="form-group">
                    <label for="destServer">Destination Server:</label>
                    <input type="text" id="destServer" placeholder="Enter destination server" required>
                </div>
                <div class="form-group">
                    <label for="destPath">Destination Path:</label>
                    <input type="text" id="destPath" placeholder="Enter destination path" required>
                </div>
                <div class="form-group">
                    <label for="filterDate">Filter Date:</label>
                    <input type="date" id="filterDate" required>
                </div>
                <button id="transferButton">Transfer Files</button>
            </div>

            <!-- History Section -->
            <div id="historySection" class="hidden">
                <h3>Transfer History</h3>
                <table id="historyTable">
                    <thead>
                        <tr>
                            <th>File Name</th>
                            <th>Source IP</th>
                            <th>Destination IP</th>
                            <th>Date & Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- This is where the transfer history will be displayed -->
                    </tbody>
                </table>
            </div>

            <!-- Upload Section -->
            <div id="uploadSection" class="hidden">
                <h3>Upload Files</h3>
                <div class="file-input-wrapper">
                    <button class="custom-file-button">Choose Files</button>
                    <input type="file" id="fileInput" multiple onchange="displaySelectedFiles()">
                </div>
                <div class="file-list" id="fileList">
                    <!-- List of files to be uploaded -->
                </div>
                <div class="upload-files-btn">
                    <button onclick="openUploadModal()">Upload Files</button>
                </div>
            </div>
        </div>
    </div>

    <!-- The Modal -->
    <div id="uploadModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeUploadModal()">&times;</span>
            <h3>Upload File Details</h3>
            <div class="form-group">
                <label for="uploadDestIP">Destination IP:</label>
                <input type="text" id="uploadDestIP" placeholder="Enter destination IP" required>
            </div>
            <div class="form-group">
                <label for="uploadDestPath">Destination Path:</label>
                <input type="text" id="uploadDestPath" placeholder="Enter destination path" required>
            </div>
            <button onclick="uploadFiles()">Confirm Upload</button>
        </div>
    </div>

    <script>
        let filesToUpload = [];

        document.addEventListener('DOMContentLoaded', function() {
            const sourceIP = sessionStorage.getItem('sourceIP') || '192.168.0.1'; // Default to 192.168.0.1 if not set
            console.log('Source IP:', sourceIP); // For debugging

            // Use the sourceIP in the transferFiles function
            function transferFiles() {
                const sourcePath = document.getElementById('sourcePath').value;
                const destServer = document.getElementById('destServer').value;
                const destPath = document.getElementById('destPath').value;
                const filterDate = document.getElementById('filterDate').value;

                const fileName = sourcePath.split('/').pop();
                const destIP = destServer;

                // Log the information or use it as needed
                console.log('Transferring file from IP:', sourceIP, 'to IP:', destIP);

                // Proceed with your file transfer logic
                fetch('/api/transfer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        sourcePath: sourcePath,
                        destServer: destServer,
                        destPath: destPath,
                        filterDate: filterDate,
                        sourceIP: sourceIP, // Use the stored IP here
                        destIP: destIP
                    })
                })
                .then(response => response.text())
                .then(message => {
                    alert(message);
                    // Additional logic for updating the history, etc.
                })
                .catch(error => {
                    console.error('Error during file transfer:', error);
                    alert('An error occurred during file transfer. Please try again.');
                });
            }

            // Attach the transferFiles function to the button or form
            document.getElementById('transferButton').addEventListener('click', transferFiles);
        });

        function displaySelectedFiles() {
            const fileInput = document.getElementById('fileInput');
            const fileList = document.getElementById('fileList');
            fileList.innerHTML = ''; // Clear the current list

            for (const file of fileInput.files) {
                filesToUpload.push(file);

                // Create a new div for each file
                const fileItem = document.createElement('div');
                fileItem.style.display = 'flex';
                fileItem.style.justifyContent = 'space-between';
                fileItem.style.alignItems = 'center';
                fileItem.style.padding = '5px 0';

                // Create a span to hold the file name
                const fileName = document.createElement('span');
                fileName.textContent = file.name;

                // Create a remove button
                const removeButton = document.createElement('button');
                removeButton.textContent = 'Remove';
                removeButton.style.backgroundColor = '#dc3545';
                removeButton.style.color = 'white';
                removeButton.style.border = 'none';
                removeButton.style.padding = '5px 10px';
                removeButton.style.borderRadius = '3px';
                removeButton.style.cursor = 'pointer';
                removeButton.onclick = function() {
                    removeFile(file.name);
                };

                // Append file name and remove button to the file item
                fileItem.appendChild(fileName);
                fileItem.appendChild(removeButton);

                // Append the file item to the file list
                fileList.appendChild(fileItem);
            }

            // Clear the file input to allow selecting the same file(s) again if needed
            fileInput.value = '';
        }

        function removeFile(fileName) {
            // Remove the file from the filesToUpload array
            filesToUpload = filesToUpload.filter(file => file.name !== fileName);

            // Refresh the display
            displaySelectedFiles();
        }

        function openUploadModal() {
            if (filesToUpload.length === 0) {
                alert("Please add files before uploading.");
                return;
            }
            document.getElementById('uploadModal').style.display = "block";
        }

        function closeUploadModal() {
            document.getElementById('uploadModal').style.display = "none";
        }

        function uploadFiles() {
            const destIP = document.getElementById('uploadDestIP').value;
            const destPath = document.getElementById('uploadDestPath').value;

            if (!destIP || !destPath) {
                alert("Please fill in all fields.");
                return;
            }

            const formData = new FormData();
            filesToUpload.forEach(file => formData.append('files', file));

            formData.append('destIP', destIP);
            formData.append('destPath', destPath);

            fetch('/api/upload', {
                method: 'POST',
                body: formData
            })
            .then(response => response.text())
            .then(message => {
                alert(message);
                filesToUpload = [];
                document.getElementById('fileList').innerHTML = '';
                closeUploadModal();
            })
            .catch(error => {
                console.error('Error during file upload:', error);
                alert('An error occurred during file upload. Please try again.');
            });
        }
    </script>
</body>
</html>
